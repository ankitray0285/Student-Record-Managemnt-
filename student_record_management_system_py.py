# -*- coding: utf-8 -*-
"""student Record Management System.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GxklKDcm6XcB6xwHl1nWs7oXrHvH-QQF

# File Handling Using Python

---
"""



# Student Record Management System

import csv

def display_menu():
    print("\n=== Enhanced Student Record Management System ===")
    print("1. Add Student Record")
    print("2. View All Records")
    print("3. Search for a Student")
    print("4. Update a Record")
    print("5. Delete a Record")
    print("6. Exit")

def add_student_record(filename):
    with open(filename, mode='a', newline='') as file:
        writer = csv.writer(file)
        student_id = input("Enter Student ID: ")
        name = input("Enter Name: ")
        marks = input("Enter Marks: ")
        writer.writerow([student_id, name, marks])
        print("Record added successfully!")

def view_all_records(filename):
    try:
        with open(filename, mode='r') as file:
            reader = csv.reader(file)
            print("\n=== All Student Records ===")
            print(f"{'ID':<10}{'Name':<20}{'Marks':<10}")
            print("-" * 40)
            for row in reader:
                if row:  # Skip empty rows
                    print(f"{row[0]:<10}{row[1]:<20}{row[2]:<10}")
    except FileNotFoundError:
        print("No records found. Add a student first.")

def search_student(filename):
    search_id = input("Enter Student ID to search: ")
    try:
        with open(filename, mode='r') as file:
            reader = csv.reader(file)
            for row in reader:
                if row and row[0] == search_id:
                    print(f"Record Found: ID: {row[0]}, Name: {row[1]}, Marks: {row[2]}")
                    return
            print("Student not found.")
    except FileNotFoundError:
        print("No records found. Add a student first.")

def update_record(filename):
    search_id = input("Enter Student ID to update: ")
    records = []
    found = False
    try:
        with open(filename, mode='r') as file:
            reader = csv.reader(file)
            records = list(reader)
        for record in records:
            if record and record[0] == search_id:
                print(f"Current Record: ID: {record[0]}, Name: {record[1]}, Marks: {record[2]}")
                record[1] = input("Enter new Name: ")
                record[2] = input("Enter new Marks: ")
                found = True
        if found:
            with open(filename, mode='w', newline='') as file:
                writer = csv.writer(file)
                writer.writerows(records)
            print("Record updated successfully!")
        else:
            print("Student not found.")
    except FileNotFoundError:
        print("No records found. Add a student first.")

def delete_record(filename):
    search_id = input("Enter Student ID to delete: ")
    records = []
    found = False
    try:
        with open(filename, mode='r') as file:
            reader = csv.reader(file)
            records = list(reader)
        updated_records = [record for record in records if record and record[0] != search_id]
        if len(updated_records) < len(records):
            found = True
        with open(filename, mode='w', newline='') as file:
            writer = csv.writer(file)
            writer.writerows(updated_records)
        if found:
            print("Record deleted successfully!")
        else:
            print("Student not found.")
    except FileNotFoundError:
        print("No records found. Add a student first.")

def main():
    filename = "students.csv"
    while True:
        display_menu()
        choice = input("Enter your choice: ")
        if choice == '1':
            add_student_record(filename)
        elif choice == '2':
            view_all_records(filename)
        elif choice == '3':
            search_student(filename)
        elif choice == '4':
            update_record(filename)
        elif choice == '5':
            delete_record(filename)
        elif choice == '6':
            print("Exiting the program. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()